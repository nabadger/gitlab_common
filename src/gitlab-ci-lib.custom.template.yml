.common:
  tags_template: &tags
    tags:
      - mintel
  docker_template: &docker
    services: 
      - docker:stable-dind
    variables:
      DOCKER_DRIVER: overlay2

.build-template:
  <<: *tags
  <<: *docker
  stage: 
    build
  script:
    - command build
  only:
    - branches

.container-scan-template:
  <<: *tags
  <<: *docker
  stage: test
  allow_failure: false
  script:
    - command container_scan
  artifacts:
    paths: [gl-container-scanning-report.json]
  except:
    variables:
      - $CONTAINER_SCANNING_DISABLED

.review-template:
  <<: *tags
  stage: review
  script:
    - command deploy
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_ENVIRONMENT_SLUG-$KUBE_HOST.$KUBE_DOMAIN
    on_stop: review-stop
  when: manual
  only:
    - branches
  except:
    refs:
      - master
    variables:
      - $REVIEW_DISABLED

.review-stop-template:
  <<: *tags
  stage: review
  variables:
    GIT_STRATEGY: none
  script:
    - command destroy
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  when: manual
  only:
    - branches
  except:
    refs:
      - master
    variables:
      - $REVIEW_DISABLED

.staging-template:
  <<: *tags
  stage: staging
  script:
    - command deploy
  environment:
    name: staging
    url: https://staging-$KUBE_HOST.$KUBE_DOMAIN
  only:
    - master
  except:
    variables:
      - $STAGING_DISABLED

.canary-template:
  <<: *tags
  stage: canary
  script:
    - command deploy
  environment:
    name: production
    url: https://$KUBE_HOST.$KUBE_DOMAIN
  when: manual
  allow_failure: false
  only:
    - master
  except:
    variables:
      - $CANARY_DISABLED

.production-template:
  <<: *tags
  stage: production
  script:
    - command deploy
  environment:
    name: production
    url: https://$KUBE_HOST.$KUBE_DOMAIN
  when: manual
  allow_failure: false
  only:
    - master
  except:
    variables:
      - $PRODUCTION_DISABLED

.canary-destroy-template:
  <<: *tags
  stage: canary-destroy
  allow_failure: false
  environment:
    name: production
  script:
    - command destroy-canary
  only:
    - $CI_PIPELINE_AGENT_TAG
  except:
    variables:
      - $CANARY_DISABLED

.tag-latest-template:
  <<: *tags
  <<: *docker
  stage: tag-latest
  allow_failure: false
  script:
    - command push
  only:
    - master
  except:
    variables:
      - $TAG_LATEST_DISABLED
